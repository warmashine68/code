1. input() - всегда является строкой
2. a = str(145) - Пример перевода другого типа данных в строку
3. В питон можно складывать строки + или , (Конкантинация)
4. Строки можно умножать на числа:
 абв * 6 = абвабвабвабвабвабв
5. char нет - любой символ - строка
6. len(s) - можно узнать длину строки
	Получение срезов (slice)

S[i] - обращение к одному символу

S[a:b] - берем кусок строки - срез от индекса а до инндекса b, не включая
его.
S[:a] - с начала строки до а, не включая его

S[2:] - от 2 до конца строки

Можно брать с конца (записывая отрицательные индексы):
	S = 'HELLO'
	S[-2] = S[len(S) - 2] = L, к-я первая с конца.

!!! #3-я форма среза (с шагами)
S[a : b : d], от a, включая его, до b - не включая его, с шагом d
то есть рассматриваем индексы: a, a + d, a + 2d ....? < b

* S[::2] - от начала до конца с шагом 2 = 'HLO'

* S1 = 'abracadabra'

  S1[2:6:3] = 'ra'

Строки, как и списки можно сравнивать:

s1 = 'abc'         Сравниваются в лексикографическом порядке
s2 = 'aab'          т.е - если бы они были в словаре, какая бы шла первой
                     в нашем случае s2 > s1
if s1 < s2:
    #do smth

___________________________________________________________________________

The same for lists:
[1, 2, 3] < [2, 1]
['one', 'b', 'c'] < ['two'], так как t > o
